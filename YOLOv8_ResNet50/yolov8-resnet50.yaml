
nc: 10  # number of classes
scales:
  n: [0.33, 0.25, 1024]
  s: [0.33, 0.50, 1024]
  m: [0.67, 0.75, 768]
  l: [1.00, 1.00, 512]
  x: [1.00, 1.25, 512]

backbone:
  # [from, repeats, module, args]
  - [-1, 1, ResNetLayer, [3, 64, 1, True, 1]]  # 0-P1/2
  - [-1, 1, ResNetLayer, [64, 64, 1, False, 3]]  # 1-P2/4
  - [-1, 1, ResNetLayer, [256, 128, 2, False, 4]]  # 2-P3/8
  - [-1, 1, ResNetLayer, [512, 256, 2, False, 6]]  # 3-P4/16
  - [-1, 1, ResNetLayer, [1024, 512, 2, False, 3]]  # 4-P5/32

# Transition layers
  - [-1, 1, Conv, [512, 1, 1]]  # 5: Adjust channels for P5
  - [3, 1, Conv, [256, 1, 1]]   # 6: Adjust channels for P4
  - [2, 1, Conv, [128, 1, 1]]   # 7: Adjust channels for P3

head:
  - [5, 1, nn.Upsample, [None, 2, 'nearest']]
  - [[-1, 6], 1, Concat, [1]]  # cat adjusted P4
  - [-1, 3, C2f, [512]]  # 10
  - [-1, 1, nn.Upsample, [None, 2, 'nearest']]
  - [[-1, 7], 1, Concat, [1]]  # cat adjusted P3
  - [-1, 3, C2f, [256]]  # 13 (P3/8-small)
  - [-1, 1, Conv, [256, 3, 2]]
  - [[-1, 10], 1, Concat, [1]]  # cat head P4
  - [-1, 3, C2f, [512]]  # 16 (P4/16-medium)
  - [-1, 1, Conv, [512, 3, 2]]
  - [[-1, 5], 1, Concat, [1]]  # cat adjusted P5
  - [-1, 3, C2f, [1024]]  # 19 (P5/32-large)
  - [[13, 16, 19], 1, Detect, [nc]]  # Detect(P3, P4, P5)
